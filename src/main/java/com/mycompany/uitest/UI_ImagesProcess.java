/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.uitest;

import java.awt.FileDialog;
import java.io.File;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import com.mycompany.uitest.preLoad;
import java.awt.Image;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import com.mycompany.uitest.xulyAnh;
import java.awt.Desktop;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.image.BufferedImage;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.SwingConstants;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 *
 * @author ADMIN
 */
public class UI_ImagesProcess extends javax.swing.JFrame{

    public String inputDirectory ="src/main/java/com/mycompany/uitest/input_images/";
    public String outputDirectory ="src/main/java/com/mycompany/uitest/output_images/";
    
    public int max_threads = 10;
    public ExecutorService executor;
    
    public int count = 0;
    public int size = 0;
    
    public double brightness = 0;
    public double contrast = 1;
    
    public long timeBatDau = 0;
    public long timeKetThuc = 0;
    
    public boolean xuLySongSong = true;
    
    public boolean xuLyLamMo = false;
    public boolean xuLyTrangDen = false;
    public boolean xuLyDoSangTuongPhan = false;
    public boolean xuLyGiamNhieu = false;
    
    public String threadString = "";
    JLabel dlogTB = new JLabel("");
    
    /**
     * Creates new form UI_ImagesProcess
     */
    public UI_ImagesProcess() {
        initComponents();

        jSliderBrightness.addChangeListener(new ChangeListener(){
          public void stateChanged(ChangeEvent e) {
              int value = jSliderBrightness.getValue();
              lblBrightness.setText("" + value);
            }
        });
        
        jSliderContrast.addChangeListener(new ChangeListener(){
          public void stateChanged(ChangeEvent e) {
              int value = jSliderContrast.getValue();
              lblContrast.setText("" + value);
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonsTinhNang = new javax.swing.ButtonGroup();
        dlogThongBao = new javax.swing.JDialog();
        jScrollPane1 = new javax.swing.JScrollPane();
        ListHinhAnh = new javax.swing.JList<>();
        jPanel1 = new javax.swing.JPanel();
        btnFilterBlur = new javax.swing.JCheckBox();
        btnBlackWhite = new javax.swing.JCheckBox();
        btnSongSongTuanTu = new javax.swing.JCheckBox();
        btnBrightnessContrast = new javax.swing.JCheckBox();
        jSliderBrightness = new javax.swing.JSlider();
        jSliderContrast = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnGaussianFilter = new javax.swing.JCheckBox();
        lblBrightness = new javax.swing.JLabel();
        lblContrast = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        btnProcess1 = new javax.swing.JButton();
        btnProcessAll = new javax.swing.JButton();
        lblXulyStatus = new javax.swing.JLabel();
        jProgressBar = new javax.swing.JProgressBar();
        lblThoiGianXuLy = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        lbHinhOri = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        lbHinhProce = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnDeleteOutput = new javax.swing.JButton();
        btnDeleteOutput2 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        javax.swing.GroupLayout dlogThongBaoLayout = new javax.swing.GroupLayout(dlogThongBao.getContentPane());
        dlogThongBao.getContentPane().setLayout(dlogThongBaoLayout);
        dlogThongBaoLayout.setHorizontalGroup(
            dlogThongBaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        dlogThongBaoLayout.setVerticalGroup(
            dlogThongBaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        ListHinhAnh.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        ListHinhAnh.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                ListHinhAnhValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(ListHinhAnh);
        preLoad loadData= new preLoad();
        ListHinhAnh.setModel(loadData.preLoadData());

        btnFilterBlur.setText("Làm mờ ảnh");

        btnBlackWhite.setText("Làm trắng đen ảnh");

        btnSongSongTuanTu.setSelected(true);
        btnSongSongTuanTu.setText("Song song (Tắt: Tuần tự)");
        btnSongSongTuanTu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSongSongTuanTuActionPerformed(evt);
            }
        });

        btnBrightnessContrast.setText("Chỉnh độ sáng và tương phản");
        btnBrightnessContrast.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBrightnessContrastActionPerformed(evt);
            }
        });

        jSliderBrightness.setMaximum(20);
        jSliderBrightness.setMinimum(-20);
        jSliderBrightness.setToolTipText("");
        jSliderBrightness.setValue(0);

        jSliderContrast.setMaximum(20);
        jSliderContrast.setMinimum(-20);
        jSliderContrast.setToolTipText("");
        jSliderContrast.setValue(0);

        jLabel1.setText("Độ sáng");

        jLabel2.setText("Tương phản");

        btnGaussianFilter.setText("Làm giảm nhiễu");
        btnGaussianFilter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGaussianFilterActionPerformed(evt);
            }
        });

        lblBrightness.setText("0");

        lblContrast.setText("0");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSliderBrightness, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE)
                    .addComponent(jSliderContrast, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblContrast, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                    .addComponent(lblBrightness, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnFilterBlur, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBlackWhite, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnSongSongTuanTu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnBrightnessContrast, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnGaussianFilter)))
                .addContainerGap(130, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnFilterBlur)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBlackWhite)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBrightnessContrast)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSliderBrightness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(lblBrightness))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jSliderContrast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(lblContrast))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGaussianFilter)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(btnSongSongTuanTu)
                .addContainerGap())
        );

        jLabel1.getAccessibleContext().setAccessibleName("jPanel1");

        btnProcess1.setText("Xử lý ảnh chọn");
        btnProcess1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnProcess1MouseClicked(evt);
            }
        });
        btnProcess1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcess1ActionPerformed(evt);
            }
        });

        btnProcessAll.setText("Xử lý tất cả ảnh");
        btnProcessAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessAllActionPerformed(evt);
            }
        });

        lblXulyStatus.setText("Trạng thái");
        lblXulyStatus.setName(""); // NOI18N
        lblXulyStatus.setVisible(true);

        lblThoiGianXuLy.setText("Thời gian xử lý:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jProgressBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(btnProcess1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnProcessAll)
                                .addGap(11, 11, 11))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(lblXulyStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                                    .addComponent(lblThoiGianXuLy, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnProcess1)
                    .addComponent(btnProcessAll))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblXulyStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblThoiGianXuLy)
                .addGap(18, 18, 18)
                .addComponent(jProgressBar, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbHinhOri, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbHinhOri, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("HÌNH CHƯA SỬA", jPanel3);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbHinhProce, javax.swing.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbHinhProce, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("HÌNH ĐÃ SỬA", jPanel4);

        jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

        jButton4.setText("Mở folder input");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4btnMoFolderOutputActionPerformed(evt);
            }
        });

        jButton3.setText("Mở folder output");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoFolderOutputActionPerformed(evt);
            }
        });

        btnDeleteOutput.setText("Xóa dữ liệu output");
        btnDeleteOutput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteOutputActionPerformed(evt);
            }
        });

        btnDeleteOutput2.setText("Thread");
        btnDeleteOutput2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowThreads(evt);
            }
        });

        jMenu1.setText("Files");

        jMenuItem1.setText("Chọn hình...");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnDeleteOutput2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(104, 104, 104)
                        .addComponent(jButton4)
                        .addGap(49, 49, 49)
                        .addComponent(jButton3)
                        .addGap(55, 55, 55)
                        .addComponent(btnDeleteOutput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(22, 22, 22))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator3))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton4)
                            .addComponent(jButton3)
                            .addComponent(btnDeleteOutput)
                            .addComponent(btnDeleteOutput2))))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
      
    public void displayImage(String imageName, JLabel imageLabel) {
        if (imageName != null) {
            ImageIcon originalIcon = new ImageIcon(imageName);
            Image originalImage = originalIcon.getImage();
            int width = imageLabel.getWidth();
            int height = imageLabel.getHeight();
            Image scaledImage = originalImage.getScaledInstance(width, height, Image.SCALE_SMOOTH);
            ImageIcon icon = new ImageIcon(scaledImage);
            imageLabel.setIcon(icon);
            //imageLabel.setText(imageName);
        }
    }
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        JFrame jf=new JFrame("get file", getGraphicsConfiguration());
        FileDialog fd = new FileDialog(jf, "Chon mot hinh anh", FileDialog.LOAD);
        fd.setDirectory("C:\\");
        fd.setFile("*.jpg;*.jpeg;");
        fd.setVisible(true);
        String filename = fd.getFile();
        if (filename == null)
        System.out.println("You cancelled the choice");
        else
        System.out.println("You chose " + filename);
        
        String pathSource = fd.getDirectory() + fd.getFile();
        String pathDest = inputDirectory + fd.getFile();
        Path source = Paths.get(pathSource);
        Path dest = Paths.get(pathDest);
        
        try {
            Files.copy(source, dest, StandardCopyOption.REPLACE_EXISTING);
            
            preLoad loadData= new preLoad();
            ListHinhAnh.setModel(loadData.preLoadData());
        } catch (IOException ex) {
            Logger.getLogger(UI_ImagesProcess.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void ListHinhAnhValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_ListHinhAnhValueChanged
               // TODO add your handling code here:
        if (!evt.getValueIsAdjusting()) {
            String selectedImage = inputDirectory + ListHinhAnh.getSelectedValue();
            File images = new File(selectedImage);
            
            lblXulyStatus.setText("Hình " + ListHinhAnh.getSelectedValue() + " đã được chọn.");
            lblXulyStatus.setVisible(true);
            
            displayImage(images.getAbsolutePath(),lbHinhOri);
        }
    }//GEN-LAST:event_ListHinhAnhValueChanged

    private void btnProcess1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProcess1MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_btnProcess1MouseClicked

    private void btnProcess1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcess1ActionPerformed
        // TODO add your handling code here:
        if (jProgressBar.getValue() > 0 && jProgressBar.getValue() < 100) {
            lblXulyStatus.setText("Đang xử lý!");
            lblXulyStatus.setVisible(true);
            return;
        }
        
        threadString = "";
        dlogTB.setText(threadString);
        jProgressBar.setValue(0);
        
        count = 0;
        String selectedImage = inputDirectory + ListHinhAnh.getSelectedValue();
        
        if (ListHinhAnh.getSelectedValue() == null) {
            /*dlogThongBao.setTitle("Thông báo lỗi");
            JLabel dlogTB = new JLabel("Xin hãy chọn hình xử lý.");
            dlogTB.setVisible(true);
            dlogThongBao.add(dlogTB);
            dlogThongBao.setVisible(true);*/
            
            lblXulyStatus.setText("Hãy chọn hình xử lý trước.");
            lblXulyStatus.setVisible(true);
            
            return;
        }
        
        if (!btnFilterBlur.isSelected() && !btnBlackWhite.isSelected() && !btnBrightnessContrast.isSelected() && !btnGaussianFilter.isSelected()) {
            lblXulyStatus.setText("Chưa chọn chức năng xử lý.");
            lblXulyStatus.setVisible(true);
            
            return;
        }
        
        lblXulyStatus.setText("Hình " + ListHinhAnh.getSelectedValue() + " đang được xử lý.");
        lblXulyStatus.setVisible(true);
        
        File sImage = new File(selectedImage);

        size = 1;
        
        timeBatDau = System.currentTimeMillis();
        
        executor = Executors.newFixedThreadPool(max_threads);
        
        xuly(sImage, outputDirectory);
        
        executor.shutdown();
    }//GEN-LAST:event_btnProcess1ActionPerformed

    private void btnProcessAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessAllActionPerformed
        // TODO add your handling code here:
        if (jProgressBar.getValue() > 0 && jProgressBar.getValue() < 100) {
            lblXulyStatus.setText("Đang xử lý!");
            lblXulyStatus.setVisible(true);
            return;
        }
           
        threadString = "";
        dlogTB.setText(threadString);
        jProgressBar.setValue(0);
        
        count = 0;
        size = ListHinhAnh.getModel().getSize();
        
        if (size < 1) {
            lblXulyStatus.setText("Không có hình để xử lý.");
            lblXulyStatus.setVisible(true);
            return;
        }        
        if (!btnFilterBlur.isSelected() && !btnBlackWhite.isSelected() && !btnBrightnessContrast.isSelected() && !btnGaussianFilter.isSelected()) {
            lblXulyStatus.setText("Chưa chọn chức năng xử lý.");
            lblXulyStatus.setVisible(true);
            return;
        }

        timeBatDau = System.currentTimeMillis();
        
        executor = Executors.newFixedThreadPool(max_threads);
        
        for (int i = 0; i < size; i++) {
            Object item = ListHinhAnh.getModel().getElementAt(i);

            String selectedImage = inputDirectory + item.toString();

            File sImage = new File(selectedImage);

            xuly(sImage, outputDirectory);
        }
        
        executor.shutdown();
    }//GEN-LAST:event_btnProcessAllActionPerformed

    private void btnDeleteOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteOutputActionPerformed
        // TODO add your handling code here:
        File folder = new File(outputDirectory);
        
        if (folder.exists() && folder.isDirectory()) {
            File[] files = folder.listFiles();
            
            if (files != null) {
                for (File file : files) {
                    if (file.isFile())
                        file.delete();
                }
            }
        }
    }//GEN-LAST:event_btnDeleteOutputActionPerformed

    private void btnMoFolderOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoFolderOutputActionPerformed
        try {
            // TODO add your handling code here:
            Desktop.getDesktop().open(new File(outputDirectory));
        } catch (IOException ex) {
            Logger.getLogger(UI_ImagesProcess.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnMoFolderOutputActionPerformed

    private void jButton4btnMoFolderOutputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4btnMoFolderOutputActionPerformed
        // TODO add your handling code here:
                try {
            // TODO add your handling code here:
            Desktop.getDesktop().open(new File(inputDirectory));
        } catch (IOException ex) {
            Logger.getLogger(UI_ImagesProcess.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton4btnMoFolderOutputActionPerformed

    private void btnGaussianFilterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGaussianFilterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnGaussianFilterActionPerformed

    private void btnBrightnessContrastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBrightnessContrastActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnBrightnessContrastActionPerformed

    private void btnSongSongTuanTuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSongSongTuanTuActionPerformed
        // TODO add your handling code here:
        if (!btnSongSongTuanTu.isSelected())
        xuLySongSong = false;
        else
        xuLySongSong = true;
    }//GEN-LAST:event_btnSongSongTuanTuActionPerformed

    private void btnShowThreads(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowThreads
        // TODO add your handling code here:
        int width = 500;
        int height = 1000;
        int x = 10;
        int y = 10;
        
        dlogThongBao.setTitle("Thread");
        dlogThongBao.setSize(new Dimension(width, height));
        dlogThongBao.setResizable(false);
        
        //JLabel dlogTB = new JLabel(threadString);
        dlogTB.setVisible(true);
        dlogTB.setBounds(x, y, width - x*2, height - y*2);
        dlogTB.setFont(new Font("Arial", Font.LAYOUT_LEFT_TO_RIGHT, 16));
        dlogTB.setVerticalAlignment(SwingConstants.TOP);
        
        dlogTB.setText("<html>" + threadString + "</html>");
        
        dlogThongBao.add(dlogTB);
        dlogThongBao.setVisible(true);
    }//GEN-LAST:event_btnShowThreads
    
    private void xuly(File sImage, String outputDirectory) {
        if (btnFilterBlur.isSelected())
            xuLyLamMo = true;
        else xuLyLamMo = false;
        
        if (btnBlackWhite.isSelected())
            xuLyTrangDen = true;
        else xuLyTrangDen = false;
        
        if (btnBrightnessContrast.isSelected()) {
            brightness = (double) (jSliderBrightness.getValue());
            contrast = (double) ((double) (jSliderContrast.getValue() + 100) / 100);
            
            xuLyDoSangTuongPhan = true;
        }
        else xuLyDoSangTuongPhan = false;
        
        if (btnGaussianFilter.isSelected())
            xuLyGiamNhieu = true;
        else xuLyGiamNhieu = false;
        
        if (xuLySongSong == false)
            xuLyTuanTu(sImage, outputDirectory);
        else
            xuLySongSong(sImage, outputDirectory);
    }
    
    private void xuLyTuanTu(File sImage, String outputDirectory) {
        try {
            BufferedImage image = ImageIO.read(sImage);

            if (xuLyLamMo == true)
                image = xulyAnh.applyFilter(image);
            if (xuLyTrangDen == true)
                image = xulyAnh.convertToGrayscale(image);
            if (xuLyDoSangTuongPhan == true)
                image = xulyAnh.enhanceBrightnessAndContrast(image, brightness, contrast);
            if (xuLyGiamNhieu == true)
                image = xulyAnh.applyCustomGaussianFilter(image);

            String outputFileName = outputDirectory + "output-" +sImage.getName();
            File output = new File(outputFileName);
            ImageIO.write(image, "jpg", output);
            lblXulyStatus.setText("Hình "+ output.getName() + " đã được xử lý.");
            lblXulyStatus.setVisible(true);
            
            updateImage(output.getAbsolutePath());
                
            updateProgressBar();
        } catch (IOException e) {
                e.printStackTrace();
        }
    }
    
    private void xuLySongSong(File sImage, String outputDirectory) {
        XuLySongSong xl = new XuLySongSong(this, sImage, outputDirectory);
        //Thread thread = new Thread(xl);
        //thread.start();
        executor.execute(xl);
    }
    
    public void updateProgressBar() {
        count++;
        int value = (int) (count * 100.0 / size);
        jProgressBar.setValue(value);
        
        if (value >= 100)
            updateStatusHoanThanh();
        else updateStatusDangXuLy();
        
        timeKetThuc = System.currentTimeMillis();
        updateThoiGianXuLy(timeBatDau, timeKetThuc);
    }
    
    public void updateThoiGianXuLy(long timeBatDau, long timeKetThuc) {
        double timeXuLy = (double) (timeKetThuc - timeBatDau) / 1000;
        lblThoiGianXuLy.setText("Thời gian xử lý: " + timeXuLy + " s");
    }
    
    public void updateStatusDangXuLy() {
        lblXulyStatus.setText("Đang xử lý.");
        lblXulyStatus.setVisible(true);
    }
    
    public void updateStatusHoanThanh() {
        lblXulyStatus.setText("Hoàn tất xử lý!");
        lblXulyStatus.setVisible(true);
    }
    
    public void updateImage(String imageName) {
        displayImage(imageName, lbHinhProce);
    }
    
    public void updateThreadText(String s) {
        threadString += s + "<br/>" ;
        dlogTB.setText("<html>" + threadString + "</html>");
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI_ImagesProcess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI_ImagesProcess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI_ImagesProcess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI_ImagesProcess.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI_ImagesProcess().setVisible(true);
               
               
            }
        });
    }
    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList<String> ListHinhAnh;
    private javax.swing.JCheckBox btnBlackWhite;
    private javax.swing.JCheckBox btnBrightnessContrast;
    private javax.swing.JButton btnDeleteOutput;
    private javax.swing.JButton btnDeleteOutput2;
    private javax.swing.JCheckBox btnFilterBlur;
    private javax.swing.JCheckBox btnGaussianFilter;
    private javax.swing.JButton btnProcess1;
    private javax.swing.JButton btnProcessAll;
    private javax.swing.JCheckBox btnSongSongTuanTu;
    private javax.swing.ButtonGroup buttonsTinhNang;
    private javax.swing.JDialog dlogThongBao;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JProgressBar jProgressBar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSlider jSliderBrightness;
    private javax.swing.JSlider jSliderContrast;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbHinhOri;
    private javax.swing.JLabel lbHinhProce;
    private javax.swing.JLabel lblBrightness;
    private javax.swing.JLabel lblContrast;
    private javax.swing.JLabel lblThoiGianXuLy;
    private javax.swing.JLabel lblXulyStatus;
    // End of variables declaration//GEN-END:variables
}

class XuLySongSong implements Runnable {
    private UI_ImagesProcess ui;
    public File sImage;
    public String outputDirectory;
    
    public XuLySongSong(UI_ImagesProcess ui, File sImage, String outputDirectory) {
        this.ui = ui;
        this.sImage = sImage;
        this.outputDirectory = outputDirectory;
    }
        
    @Override
    public void run() {
        if (sImage.isFile() && (sImage.getName().endsWith(".jpg") || sImage.getName().endsWith(".jpeg"))) {
            try {
                BufferedImage image = ImageIO.read(sImage);
                
                String id = Long.toString(Thread.currentThread().getId());
                String name = Thread.currentThread().getName();
                ui.updateThreadText("Hình " + sImage.getName() + " (ID #" + id + "; Name: " + name + ") đang được xử lý.");
                
                if (ui.xuLyLamMo == true)
                    image = xulyAnh.applyFilter(image);
                if (ui.xuLyTrangDen == true)
                    image = xulyAnh.convertToGrayscale(image);
                if (ui.xuLyDoSangTuongPhan == true)
                    image = xulyAnh.enhanceBrightnessAndContrast(image, ui.brightness, ui.contrast);
                if (ui.xuLyGiamNhieu == true)
                    image = xulyAnh.applyCustomGaussianFilter(image);
                
                String outputFileName = outputDirectory + "output-" +sImage.getName();
                File output = new File(outputFileName);
                ImageIO.write(image, "jpg", output);
                
                ui.updateProgressBar();
                ui.updateImage(output.getAbsolutePath());
                ui.updateThreadText("Hình " + sImage.getName() + " (ID #" + id + "; Name: " + name + ") đã được xử lý.");
            }catch (IOException e) {
                e.printStackTrace();
            }
        }
    }
}
